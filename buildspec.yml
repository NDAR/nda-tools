version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.8

  build:
    on-failure: ABORT
    commands:
      - pip install --upgrade pip
      - pip install setuptools wheel twine build
      - pip install keyrings.alt
      - pip install -e '.[test]'
      - coverage run -m pytest && coverage report -m
      - python -m build
      - twine upload $PYTHON_ENV dist/* -u $PYPI_USER -p $TESTPYPI_PASSWORD
      - |
        if [[ -v "$GITHUB_REPO" ]]; then 
          echo "Setting up SSH key"
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" | tr [:space:] "\n" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git remote set-url --push origin $GITHUB_REPO
          ssh -i ~/.ssh/id_rsa -T git@github.com
          echo "Extract the version number"
          initFilePath="NDATools/__init__.py"
          versionPattern="__version__ = '([0-9]+\.[0-9]+\.[0-9]+)'"
          initFileContent=$(cat "$initFilePath")
          versionNumber=$(echo "$initFileContent" | grep -Po "$versionPattern" | cut -d"'" -f2)
          if [ -n "$versionNumber" ]; then
            echo "Version number found: $versionNumber"
            gitTag="$versionNumber"
            git tag "$gitTag"
            git push --tags
            git push origin main
          else
            echo "Version number not found in __init__.py"
            exit 1
          fi
        else
          echo "In Development stage, skipping push to Github."
        fi
  post_build:
    commands:
      - echo $CODEBUILD_RESOLVED_SOURCE_VERSION

artifacts:
  files:
    - dist/*
